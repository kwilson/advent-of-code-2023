import { expect, test } from 'vitest';
import { Universe } from './types';
import { getExpandedUniverse } from './getExpandedUniverse';
import { getGalaxyCoordinates } from './getGalaxyCoordinates';

function parseUniverse(value: string): Universe {
  return value
    .split('\n')
    .filter(Boolean)
    .map((line) => line.trim().split(''));
}

const input = `
...#......
.......#..
#.........
..........
......#...
.#........
.........#
..........
.......#..
#...#.....
`;

// ....1........
// .........2...
// 3............
// .............
// .............
// ........4....
// .5...........
// .##.........6
// ..##.........
// ...##........
// ....##...7...
// 8....9.......

test('result is as expected', () => {
  const { expandedUniverse } = getExpandedUniverse(parseUniverse(input));
  const result = getGalaxyCoordinates(expandedUniverse);

  const expected: [number, number][] = [
    [0, 4],
    [1, 9],
    [2, 0],
    [5, 8],
    [6, 1],
    [7, 12],
    [10, 9],
    [11, 0],
    [11, 5],
  ];

  expect(result.map((x) => JSON.stringify(x))).toEqual(
    expected.map((x) => JSON.stringify(x)),
  );
});
